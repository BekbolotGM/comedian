stages:
#  - tests
  - build
  - deploy
services:
  - docker:dind


# tests: 
#   stage: tests
#   image: halfb00t/docker-compose:1.22
#   tags:
#     - docker
#   script:
#     - docker network create comedian_comedian
#     - docker-compose -f ./docker-compose-test.yml up -d db
#     - docker-compose -f ./docker-compose-test.yml up -d golang 
#     - docker exec -i golang-test ls
#     - sleep 10
#     - docker exec -i golang-test make run_tests
#   allow_failure: true
#   only:
#     - master
  

build:
  image: docker:latest
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker build --pull -t registry.gitlab.com/team-monitoring/comedian .
    - docker tag registry.gitlab.com/team-monitoring/comedian registry.gitlab.com/team-monitoring/comedian:staging
    - docker push registry.gitlab.com/team-monitoring/comedian
    - docker push registry.gitlab.com/team-monitoring/comedian:staging
  only:
    - master
  when:
    manual


staging_deploy:
  stage: deploy
  image: halfb00t/alpine:3.7
  before_script:
    - eval "$(ssh-agent -s)"
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp docker-deploy/docker-compose-staging.yml gitlab@$DEPLOY_SERVER_IP:/opt/docker/staging-comedian/docker-compose.yml
    - ssh gitlab@$DEPLOY_SERVER_IP "$STAGING_DEPLOY_COMMAND"
    - ssh-agent -k
  only:
    - master


# deploy:
#   stage: deploy
#   image: halfb00t/alpine:3.7
#   before_script:
#     - eval "$(ssh-agent -s)"
#     - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#   script:
#     - scp docker-deploy/docker-compose.yml gitlab@$DEPLOY_SERVER_IP:/opt/docker/comedian/
#     - ssh gitlab@$DEPLOY_SERVER_IP "$DEPLOY_COMMAND"
#     - ssh-agent -k
#   only:
#     - master
#   when:
#     manual